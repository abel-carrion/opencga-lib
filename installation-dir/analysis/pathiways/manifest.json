{
	author: {
		name: "",
		email: ""
	},
	version: "1.0",
	id: "pathiways",
	name: "Pathiways",
	description: "",
	icon: {
		size: "",
		data: ""
	},
	website: "http://",
	publication: "",
	globalParams: [],
	executions: [
	             {
	            	 id: "pathiways",
	            	 name: "Pathiways",
	            	 executable: "bin/pathiwaysANALYSIS.py",
	            	 inputParams: [{name:"norm-matrix", dataType:"txt"},{name:"exp-design", dataType:"txt"}],
	            	 inputParamsFromTxt: [],
	            	 outputParam: "outdir",
	            	 validParams: [
	            	           {name:"norm-matrix", description:"Normalized matrix file.", required:"true"},
	            	           {name:"exp-design", description:"Experimental design file.", required:"true"},
	            	           {name:"pathways", description:"List of pathways.", required:"true"},
	            	           {name:"summ", description:"Summ value.", required:"true"},
	            	           {name:"control", description:"Control value.", required:"true"},
	            	           {name:"disease", description:"Disease value.", required:"true"},
	            	           {name:"platform", description:"Platform value.", required:"true"},
	            	           {name:"exp-name", description:"Experiment name.", required:"true"}
	            	 ],
	            	 configAttr: [],
	            	 testCmd: "",
	            	 result: {
	            	    	layout : {
	            	    		title: 'Job results',
	            	    		children: render()
	            	    	},
	            	    	render : function() {
	            	    		var children = [];
	            	    		var groups = {};
	            	    		var pathwayDict = {'03320':'PPAR SIGNALING PATHWAY', '04010':'MAPK SIGNALING PATHWAY', '04012':'ERBB SIGNALING PATHWAY', '04020':'CALCIUM SIGNALING PATHWAY', '04060':'CITOKINE-CYTOKINE RECEPTOR INTERACTION', '04080':'NEUROACTIVE LIGAND-RECEPTOR INTERACTION', '04110':'CELL CYCLE', '04115':'P53 SIGNALING PATHWAY', '04150':'mTOR SIGNALING PATHWAY', '04210':'APOPTOSIS', '04310':'WNT SIGNALING PATHWAY', '04330':'NOTCH SIGNALING PATHWAY', '04340':'HEDGEHOG SIGNALING PATHWAY', '04350':'TGF-BETA SIGNALING PATHWAY', '04370':'VEGF SIGNALING PATHWAY', '04510':'FOCAL ADHESION', '04512':'ECM-RECEPTOR INTERACTION', '04514':'CELL ADHESION MOLECULES', '04520':'ADHERENS JUNTION', '04530':'TIGHT JUNCTION', '04540':'GAP JUNCTION', '04610':'COMPLEMENT AND COAGULATION CASCADES', '04612':'ANTIGEN PROCESINS AND PRESENTATION', '04620':'TOLL-LIKE RECEPTOR SIGNALING PATHWAY', '04630':'JAK-STAT SIGNALING PATHWAY', '04650':'NATURAL CELL MEDIATED CYTOTOXICITY', '04660':'T CELL RECEPTOR SIGNALING PATHWAY', '04662':'B CELL RECEPTOR SIGNALING PATHWAY', '04664':'Fc EPSILON RI SIGNALING PATHWAY', '04670':'LEUKOCYTE TRANSENDOTHELIAL MIGRATION', '04720':'LONG-TERM POTENTIATION', '04730':'LONG-TERM DEPRESSION', '04910':'INSULIN SIGNALING PATHWAY', '04912':'GnRH SIGNALING PATHWAY', '04916':'MELANOGENESIS', '04920':'ADIPOCYTOKINE SIGNALING PATHWAY'};
	            	    		
	            	    		for(var i=0, leni=this.outputItems.length; i<leni; i++) {
	            	    			var group = this.outputItems[i].split('.')[0].split('_')[1].substring(3);
	            	    			if(groups[group] == undefined) groups[group] = {title: pathwayDict[group], children: []};
	            	    			
	            	    			var ext = this.outputItems[i].substring(this.outputItems[i].lastIndexOf('.'));
	            	    			var item;
	            	    			switch (ext) {
	            	    			case ".jpeg":
	            	    				item = {
	            	    					title: pathwayDict[group],
	            	    					file: this.outputItems[i],
	            	    					renderers: [
	            	    					            {type: "link"},
	            	    					            {type: "image"}
	            	    					           ]
	            	    				};
	            	    				break;
	            	    			case ".txt":
	            	    				item = {
	            	    					title: pathwayDict[group],
	            	    					file: this.outputItems[i],
	            	    					renderers: [
	            	    					            {type: "link"},
	            	    					            {type: "grid", tableLayout:""}
	            	    					           ]
	            	    				};
	            	    				break;
	            	    			}
	            	    			groups[group].children.push(item);
	            	    		}
	            	    		
	            	    		for(var group in groups) {
	            	    			children.push(groups[group]);
	            	    		}
	            	    		
	            	    		return children;
	            	    	}
	            	    }
	             }
	],
    examples: [],
    acl: []
}
